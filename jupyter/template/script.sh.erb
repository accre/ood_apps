#!/usr/bin/env bash

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

# Set working directory to home directory
cd "${HOME}"

# Purge the module environment to avoid conflicts
# module purge
unset PYTHONPATH
unset accre_jupyter_mc

<%- if context.use_venv.to_i == 1 -%>
source <%= context.venv %>/bin/activate
<%- else -%>

# For potential future use, currently only supporting StdEnv/2023
#
#version_lt() {
#  test "$(printf '%s\n' "$@" | sort -V | head -n 1)" == "$1";
#}
#PY_VER=$(echo <%= context.python_lmod_version %> | cut -d '/' -f2)
#if version_lt "$PY_VER" "3.10.3"; then
#  module load StdEnv/2020
#fi

source /etc/accre/lmod.sh accre_cc

# Purge the module environment to avoid conflicts just in case
module purge

<%- if context.scipy_lmod_version == "zzz-empty" -%>
module load <%= context.python_lmod_version %>
<%- else -%>
module load <%= context.python_lmod_version %> <%= context.scipy_lmod_version %>
<%- end -%>
virtualenv --no-download ${ACCRE_RUNTIME_DIR}/venv
source ${ACCRE_RUNTIME_DIR}/venv/bin/activate
pip install --no-index --upgrade pip
pip install jupyter <%= context.extra_python_packages %> --no-index

<%- if ! context.python_requirements_file.strip.empty? -%>
pip install -r <%= context.python_requirements_file %> --no-index
<%- end -%>
# For debugging purposes
echo "Job Debugging Information"
echo "========================="
jupyter --version
pip freeze
module list
echo "========================="
<%- end -%>


# Benchmark info
echo "TIMING - Starting jupyter at: $(date)"

# Launch the Jupyter Notebook Server
set -x

unset XDG_RUNTIME_DIR
jupyter notebook --config="${CONFIG_FILE}" --ip="0.0.0.0" --notebook-dir=<%= context.notebook_dir %> <%= context.extra_jupyter_args %>
