# Batch Connect app configuration file
#
---

cluster: "accre"

attributes:
  bc_account:
    label: "GPU Enabled Slurm Account"
  bc_queue: null
  bc_num_slots: null
  bc_num_hours:
    value: 48
  bc_mem: null
  bc_num_cores: null
  num_gpus:
    value: 1
    label: "Number of requested GPU resources"
    help: |
        Note that requesting 4 GPU resources will give you an
        exclusive reservation on the server.
  gpu_arch:
    label: "GPU Architecture"
    widget: select
    options:
      - ["A6000x4", "a6000x4"]
      - ["Pascal", "pascal"]
      - ["Turing", "turing"]
  notebook_dir:
    label: "Working Directory"
    help: "Directory containing your notebook files. Defaults to your home directory, you must include the absolute path to the directory."
    widget: "text_field"
    value: "${HOME}"
  version:
    widget: select
    label: "Python version"
    help: |
      Select the version of Python that you want to load based
      on either an ACCRE GCC or Intel compiler toolchain or an installed Anaconda
      distribution. Note that versions previous to 3.7.2 may not work on the
      Turing architecture nodes.
    options:
      - [ "Python/3.10.4 (GCC)", "GCC/11.3.0/Python3"]
      - [ "Python/3.8.6 (GCC/10.2.0)", "GCC/10.2.0/Python3"]
      - [ "Python/3.7.2 (GCC/8.2.0)", "GCC/8.2.0/Python3"]
      - [ "Python/3.7.2 (Intel/2019.1.144)", "Intel/2019.1.144/Python3"]
      - [ "Python/3.6.3 (GCC/6.4.0-2.28)", "GCC/6.4.0-2.28/Python3"]
      - [ "Python/3.6.3 (Intel/2017.4.196)", "Intel/2017.4.196/Python3"]
      - [ "Python 3.9.12 / Anaconda 2022.05", "Anaconda3/2022.05"]
      - [ "Python 3.9.7 / Anaconda 2021.11", "Anaconda3/2021.11"]
      - [ "Python 3.8.8 / Anaconda 2021.05", "Anaconda3/2021.05"]
      - [ "Python 3.7.4 / Anaconda 2019.10", "Anaconda3/2019.10"]
      - [ "Python 3.6.3 / Anaconda 5.0.1", "Anaconda3/5.0.1"]
      - [ "Python 3.6.1 / Anaconda 4.4.0", "Anaconda3/4.4.0"]
      - [ "Python/2.7.14 (GCC/6.4.0-2.28)", "GCC/6.4.0-2.28/Python2"]
      - [ "Python/2.7.14 (Intel/2017.4.196)", "Intel/2017.4.196/Python2"]
      - [ "Python 2.1.16 / Anaconda 2019.10", "Anaconda2/2019.10"]
      - [ "Python 2.7.14 / Anaconda 5.0.1", "Anaconda2/5.0.1"]
      - [ "Python 2.7.13 / Anaconda 4.4.0", "Anaconda2/4.4.0"]
  use_venv:
    widget: check_box
    checked_value: 1
    unchecked_value: 0
    label: "Use a Virtual Environment"
    help: |
      Check this box if you wish to load a conda or python environment.
  venv:
    widget: "text_field"
    label: "Python or Conda Virtual Environment"
    help: |
      Leave blank unless using a python or conda virtual environment. For
      a python virtual environment, you must specify the absolute path.
      For a python virtual environment, any packages built in the environment
      will take precedence over those from the Lmod modules. Any virtual
      environment used should have been built from the same Python or Anaconda
      Lmod module selected above.
    value: ""
  use_mc:
    widget: check_box
    checked_value: 1
    unchecked_value: 0
    label: "Use Custom Module Collection"
    help: |
      Check this box if you wish to load a module collection instead of using
      Lmod modules specified by the python version menu above.
  mc:
    widget: "text_field"
    label: "Custom Module Collection"
    help: |
      Leave blank unless using your own Lmod module collection instead of a
      preselected set of modules determined by the "Python version" menu above.
      Note that if you are using your own collection of modules, this collection
      must result in a valid jupyter executable in your path or the app will
      not function. If set, this field should be the name of your collection
      specified in the "module save" command. If a custom module collection is
      used, then the "Python version" selection will have no effect.
    value: ""

form:
  - bc_account
  - bc_queue
  - bc_num_hours
  - bc_mem
  - bc_num_cores
  - bc_num_slots
  - num_gpus
  - gpu_arch
  - notebook_dir
  - version
  - use_venv
  - venv
  - use_mc
  - mc
